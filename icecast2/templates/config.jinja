{%- set config = pillar.get('icecast2:config', {}) -%}

{%- macro option(d, key, default) -%}
  {%- set value = sshd_config.get(key, default) -%}
  {%- if value is sameas true -%}
    <{{ key }}>1</{{ key }}>
  {%- elif value is sameas false -%}
    <{{ key }}>0</{{ key }}>
  {%- elif value is string or value is number -%}
    <{{ key }}>{{ value|e }}</{{ key }}>
  {%- elif value is list -%}
{%- for single_value in value -%}
    <{{ key }}>
  {%- if single_value is string or single_value is number -%}
      {{ single_value|e }}
  {%- else -%}
{%- for single_key in single_value.keys() -%}
{{ option(single_value, single_key, '') }}
{%- endfor -%}
  {%- endif -%}
    </{{ key }}>
{% endfor -%}
  {%- elif value is dict -%}
    <{{ key }}>
{%- for single_key in value.keys() -%}
{{ option(value, single_key, '') }}
{%- endfor -%}
    </{{ key }}>
  {%- endif -%}
{%- endmacro -%}

<icecast>
    {%- set c_limits = config.get('limits', {}) -%}
    <limits>
{{ option(c_limit, "clients", 500) }}
{{ option(c_limit, "sources", 6) }}
{{ option(c_limit, "threadpool", 5) }}
{{ option(c_limit, "queue-size", 524288) }}
{{ option(c_limit, "client-timeout", 30) }}
{{ option(c_limit, "header-timeout", 15) }}
{{ option(c_limit, "source-timeout", 10) }}
        <!-- If enabled, this will provide a burst of data when a client 
             first connects, thereby significantly reducing the startup 
             time for listeners that do substantial buffering. However,
             it also significantly increases latency between the source
             client and listening client.  For low-latency setups, you
             might want to disable this. -->
{{ option(c_limit, "burst-on-connect", true) }}
        <!-- same as burst-on-connect, but this allows for being more
             specific on how much to burst. Most people won't need to
             change from the default 64k. Applies to all mountpoints  -->
{{ option(c_limit, "burst-size", 65535) }}
    </limits>

{%- set c_auth = config.get('authentication', {}) -%}
    <authentication>
        <!-- Sources log in with username 'source' -->
{{ option(c_auth, "source-password", "icrint") }}
        <!-- Relays log in username 'relay' -->
{{ option(c_auth, "relay-password", "super123") }}

        <!-- Admin logs in with the username given below -->
{{ option(c_auth, "admin-user", "admin") }}
{{ option(c_auth, "admin-password", "icrint") }}
    </authentication>

    <!-- set the mountpoint for a shoutcast source to use, the default if not
         specified is /stream but you can change it here if an alternative is
         wanted or an extension is required
    -->
{{ option(config, "shoutcast-mount", []) }}

    <!-- Uncomment this if you want directory listings -->
    <!--
    <directory>
        <yp-url-timeout>15</yp-url-timeout>
        <yp-url>http://dir.xiph.org/cgi-bin/yp-cgi</yp-url>
    </directory>
     -->
{{ option(config, "directory", []) }}

    <!-- This is the hostname other people will use to connect to your server.
    It affects mainly the urls generated by Icecast for playlists and yp
    listings. -->
{{ option(config, "hostname", grains['fqdn']) }}

    <!-- You may have multiple <listener> elements -->
{{ option(config, "listen-socket", []) }}

{{ option(config, "master-server", []) }}
{{ option(config, "master-server-port", []) }}
{{ option(config, "master-update-interval", []) }}
{{ option(config, "master-password", []) }}

    <!-- setting this makes all relays on-demand unless overridden, this is
         useful for master relays which do not have <relay> definitions here.
         The default is 0 -->
{{ option(config, "relays-on-demand", 0) }}

{{ option(config, "relay", []) }}

{{ option(config, "mount", []) }}

{{ option(config, "fileserve", 0) }}

    <paths>
        {%- set c_paths = config.get('paths', {}) -%}

        <!-- basedir is only used if chroot is enabled -->
{{ option(c_paths, "basedir", []) }}

        <!-- Note that if <chroot> is turned on below, these paths must both
             be relative to the new root, not the original root -->
{{ option(c_paths, "logdir", '/var/log/icecast2') }}
{{ option(c_paths, "webroot", '/usr/share/icecast2/web') }}
{{ option(c_paths, "adminroot", '/usr/share/icecast2/admin') }}
{{ option(c_paths, "pidfile", []) }}

{{ option(c_paths, "alias", []) }}
    </paths>

    <logging>
        {%- set c_logging = config.get('logging', {}) -%}

{{ option(c_logging, "accesslog", []) }}
{{ option(c_logging, "errorlog", []) }}
{{ option(c_logging, "playlistlog", []) }}
{{ option(c_logging, "loglevel", 3) }} <!-- 4 Debug, 3 Info, 2 Warn, 1 Error -->
{{ option(c_logging, "logsize", 10000) }} <!-- Max size of a logfile -->

        <!-- If logarchive is enabled (1), then when logsize is reached
             the logfile will be moved to [error|access|playlist].log.DATESTAMP,
             otherwise it will be moved to [error|access|playlist].log.old.
             Default is non-archive mode (i.e. overwrite)
        -->
{{ option(c_logging, "logarchive", false) }}
    </logging>

    <security>
        {%- set c_security = config.get('security', {}) -%}

{{ option(c_security, "chroot", false) }}
{{ option(c_security, "changeowner", []) }}
    </security>
</icecast>
